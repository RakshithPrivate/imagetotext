apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.appdistribution'

android {
    compileSdkVersion 34
    buildToolsVersion '32'

    defaultConfig {
        applicationId "com.app.imagetotext"
        minSdkVersion 22
        targetSdkVersion 34
        versionCode 8
        versionName "1.8"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            //debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'



            ext.config = getProps('../config/release.properties')

            ext.config.each { p ->

                if(p.key == "APP_NAME"){

                    resValue "string","app_name", p.value

                }

                else if(p.key=="APPLICATION_ID_SUFFIX"){

                    applicationIdSuffix p.value

                }else

                    buildConfigField 'String', p.key, p.value

            }
        }
        staging {
            //debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            ext.config = getProps('../config/staging.properties')

            ext.config.each { p ->

                if(p.key == "APP_NAME"){

                    resValue "string","app_name", p.value

                }

                else if(p.key=="APPLICATION_ID_SUFFIX"){

                    applicationIdSuffix p.value

                }else

                    buildConfigField 'String', p.key, p.value

            }
        }

        release {
            //debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            ext.config = getProps('../config/release.properties')

            ext.config.each { p ->

                if(p.key == "APP_NAME"){

                    resValue "string","app_name", p.value

                }

                else if(p.key=="APPLICATION_ID_SUFFIX"){

                    applicationIdSuffix p.value

                }else

                    buildConfigField 'String', p.key, p.value

            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'com.google.firebase:firebase-ads:20.6.0'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4-alpha07'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha07'

    implementation 'com.github.dhaval2404:imagepicker:1.7.5'
    implementation 'com.github.florent37:inline-activity-result-kotlin:1.0.4'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'


    implementation 'com.google.android.gms:play-services-ads:20.5.0'
    implementation 'com.google.ads.mediation:facebook:6.8.0.0'
    implementation 'com.google.android.ads:mediation-test-suite:2.0.0'
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha07'
}
//ca-app-pub-1786194561317410~2534648553

def getProps(path) {

    Properties props = new Properties()

    props.load(new FileInputStream(file(path)))

    return props

}